---
- name: testing connectivity
  hosts: all
  vars:
    ansible_user: linux
    ansible_port: 2222
    ansible_password: test
    ansible_sudo_pass: test
  gather_facts: false
  tasks:
    - name: ping
      ansible.builtin.ping:
      register: ping_result

    - name: display result
      ansible.builtin.debug:
        msg: "asdf {{ ping_result.ping }}"
      when: ping_result is defined

    # - name: Install neovim
    #   become: true
    #   community.general.apk:
    #     name: neovim
    #     state: present

    # - name: Remove neovim
    #   become: true
    #   community.general.apk:
    #     name: neovim
    #     state: absent
    #
    # TODO: create a role
    # TODO: all in one install?

    - name: Install lua (neovim dependency)
      become: true
      community.general.apk:
        name: lua5.1
        state: present

    - name: Install luajit (neovim dependency)
      become: true
      community.general.apk:
        name: luajit
        state: present

    - name: Install libluv (neovim dependency)
      become: true
      community.general.apk:
        name: libluv
        state: present

    # - name: update apk cache
    #   become: true
    #   community.general.apk:
    #     update_cache: yes
    #   when: ansible_pkg_mgr == "apk"

    - name: Install neovim from edge repo
      become: true
      community.general.apk:
        name: neovim
        state: latest
        # no_cache: true
        update_cache: true
        repository: https://dl-cdn.alpinelinux.org/alpine/edge/community/
        # https://pkgs.alpinelinux.org/package/edge/community/x86/neovim
    
    # "ERROR: unable to select packages:",
    # "  so:libdbus-1.so.3 (no such package):",
    # "    required by: emacs-nox-30.2-r0[so:libdbus-1.so.3]",
    # "  so:libgmp.so.10 (no such package):",
    # "    required by: emacs-nox-30.2-r0[so:libgmp.so.10]",
    # "  so:libgnutls.so.30 (no such package):",
    # "    required by: emacs-nox-30.2-r0[so:libgnutls.so.30]",
    # "  so:libxml2.so.2 (no such package):",
    # "    required by: emacs-nox-30.2-r0[so:libxml2.so.2

    - name: Install libdbus
      become: true
      community.general.apk:
        name: dbus-libs
        state: latest
        # no_cache: true
        update_cache: true

    - name: Install libgmp
      become: true
      community.general.apk:
        name: gmp
        state: latest
        # no_cache: true
        update_cache: true

    - name: Install libgnutls
      become: true
      community.general.apk:
        name: gnutls
        state: latest
        # no_cache: true
        update_cache: true

    - name: Install libxml2
      become: true
      community.general.apk:
        name: libxml2
        state: latest
        # no_cache: true
        update_cache: true

    - name: Install emacs-nox from edge repo
      become: true
      community.general.apk:
        name: emacs-nox
        state: latest
        # no_cache: true
        update_cache: true
        repository: https://dl-cdn.alpinelinux.org/alpine/edge/community/
        # https://pkgs.alpinelinux.org/package/edge/community/x86/emacs-nox
        # https://pkgs.alpinelinux.org/package/edge/community/x86/emacs
      
    - name: Install git
      become: true
      community.general.apk:
        name: git gcc g++ cmake curl wget zsh fzf jq zip
        state: latest
        # no_cache: true
        update_cache: true

    - name: Clone LazyVim starter repository
      ansible.builtin.git:
        repo: https://github.com/LazyVim/starter
        dest: ~/.config/nvim

    - name: Update Lazy in shell
      # vars:
      # ts_parsers:
      # - c
      # - cpp
      # - go
      # - lua
      # - python
      # - rust
      # - tsx
      # - javascript
      # - typescript
      # - vimdoc
      # - vim
      # - bash
      # - yaml
      # - toml
      # - vue
      # - just
      # - terraform
      # - markdown_inline
      # TODO: add
      # +"TSInstallSync! ${ts_parsers}" \
      # +"MasonInstall! ${mason}" \
      ansible.builtin.shell: |
        nvim --headless \
          +"Lazy! sync" \
          +"TSUpdateSync" \
          +qa

    - name: Copy file from playbook directory
      copy:
        src: ./nvim-spider.lua
        dest: ~/.config/nvim/lua/plugins/

    - name: Rerun Lazy in shell
      ansible.builtin.shell: |
        nvim --headless \
          +"Lazy! sync" \
          +qa
